@startuml

abstract class Enemigo{
# vida:Vida
# cantidadMovimientos:Int
# poderAtaque:Int

+ boolean estaVivo():Boolean
+ recibirDanio(int danio)
+ daniarJugador()
+ avanzar(Mapa mapa)
+ estaEnRango(Coordenada posicion, int distancia):Boolean
+ setEfectoEnemigo(Efecto nuevoEfecto)
}

interface Efecto{
+ avanzar(int cantPasos, Movimiento movimientoEnemigo, Mapa mapa):Efecto
}

class Relentizado{
- porcentajeRelentizado : Int
+ Relentizado(porcentajeRelentizado : Int)
}

class SinEfecto{
}

interface Movimiento{
+ reasignarPosiciones(Coordenada coordInicial, Coordenada coordFinal)
+ actualizarPosicion(Parcela parcelaSiguiente)
+ avanzar(int cantidadPasos, Mapa mapa)
+ daniarJugador()
+ estaEnRango(Coordenada posicion, int distancia):Boolean
+ setMovimiento(Movimiento otroMovimiento):Movimiento
+ representarUbicacion():String
}

class SeguirPasarela{
- posicionActuial:Coordenada

}
class MovimientoCateto{
- posicionActuial:Coordenada

}
class MovimientoHipotenusa{
- posicionActuial:Coordenada

}

class Arania{}
class Hormiga{}
class Topo{}
class Lechuza{}



MovimientoCateto ..|> Movimiento
MovimientoHipotenusa ..|> Movimiento
SeguirPasarela ..|> Movimiento

SinEfecto ..|> Efecto
Relentizado ..|> Efecto

Enemigo <|-- Arania
Enemigo <|-- Hormiga
Enemigo <|-- Topo
Enemigo <|-- Lechuza

Enemigo <- Movimiento
Efecto -> Enemigo
@enduml