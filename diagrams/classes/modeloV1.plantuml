@startuml

class Turnero{}

abstract class Parcela{}

class Mapa{
- mapa:Parcela
- oleadas:Enemigo
- pasarelaInicial:Pasarela
- pasarelaFinal:Pasarela

+ cargarOleadas(Enemigo oleadas)
+ agregarEnemigosDelTurno(Enemigo enemigosDelJuego)
+ ver(Coordenada coordenada):Parcela
}

class Jugador{
- vida:Vida
- creditos:Credito
- rachaDeHormigas:RachaDeHomigas
- nombre:String
- tienda:Tienda

+ reestablecerEstadoInicial()
+ recompensar(int creditosRecibidos)
+ recibirDanio(int unDanio)
+ estaVivo():Boolean
+ comprar(String tipoDefensa):Defensa
+ descontarCreditos(Credito creditos)
}

class Juego{
+ comprarDefensa(String unaDefensa, Coordenada coordenada)
+ daniarAlJugador(int unNumero)
+ nuevoEnemigo(Enemigo nuevoEnemigo)
+ finalizado():Boolean
+ jugarTurno(int numeroTurno)
+ recompensarJugador(int unNumero)
+ descontarCreditosAlJugador(Credito cantidadACobrar)
+ verificarConstruccionesPosibles():String
+ comprar(String nombreDeLaDefensa)
+ reestablecerJuego()
+ obtenerNuevoEstado():EstadoJuego
}

interface EstadoJuego{
+introducirEnemigo(Enemigo enemigo):EstadoJuego
+introducirDefensa(Defensa defensa):EstadoJuego
+finalizado():Boolean
+jugarTurno(boolean jugadorVivo, int numeroTurno):EstadoJuego
+destruirDefensaMasAntigua()
}

class Ganado{}
class Perdido{}
class Jugando{}

abstract class Enemigo{}
abstract class Defensa{}

Mapa --o Juego
Parcela "*" -o Mapa


Juego o- Jugador
EstadoJuego -* Juego
EstadoJuego <|.. Ganado
EstadoJuego <|.. Perdido
EstadoJuego <|.. Jugando

Jugando --> "*" Enemigo
Jugando --> "*" Defensa

@enduml